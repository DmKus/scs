triangle<-sc_node_not_relation;;


/*вопрос: какой вариант лучше использовать? 
В Belarus.scs используется такие штуки nrel_main_ru_idtf и nrel_main_en_idtf, но определения я их не нашел.
Еще такой вопрос: как можно генерить осмысленные английские названия переменных? 
Нужно хранить где-то какой-то словарь со всеми терминами?*/


//    1
triangle=>nrel_main_idtf:[Треугольник](*<-lang_ru;;*);;
triangle=>nrel_iftd:[Класс треугольников](*<-lang_ru;;*);;
triangle=>nrel_iftd:[плоский треугольник](*<-lang_ru;;*);;
triangle=>nrel_iftd:[Понятие треугольника](*<-lang_ru;;*);;
triangle=>nrel_iftd:[Множество всевозможных треугольников](*<-lang_ru;;*);;
triangle=>nrel_iftd:[Множество знаков всевозможных треугольников](*<-lang_ru;;*);;
triangle=>nrel_iftd:[многоугольник с тремя сторонами](*<-lang_ru;;*);;
triangle=>nrel_iftd:[triangle](*<-lang_en;;*);;

/*     2
triangle=>nrel_main_ru_idtf:[Треугольник];;
trianglr=>nrel_ru_idtf:[класс треугольников];[плоский треугольник];[Понятие треугольника];
[Множество всевозможных треугольников];[Множество всевозможных треугольников];
[Множество знаков всевозможных треугольников];[многоугольник с тремя сторонами];;
triangle=>nrel_en_iftd:[triangle];;
*/

/*	1
convex_triangle<-sc_node_not_relation;;
convex_triangle=>nrel_main_ru_idtf:[выпуклый многоугольник];;
isosceles_triangle<-sc_node_not_relation;;
isosceles_triangle=>nrel_main_ru_idtf:[равнобедренный треугольник];;
*/

//	2
sc_node_not_relation->convex_triangle(*=>nrel_main_ru_idtf:[выпуклый многоугольник];;*);;
sc_node_not_relation->isosceles_triangle(*=>nrel_main_ru_idtf:[равнобедренный треугольник];;*);;

triangle=>set_nrel_inclusion:convex_triangle;;
triangle<=set_nrel_inclusion:isosceles_triangle;;


triangle<=set_nrel_subdividing:
{
	sc_node_not_relation->versatile_triangle(*=>nrel_main_ru_idtf:[разносторонний треугольник];;*);
	sc_node_not_relation->convex_triangle(*=>nrel_main_ru_idtf:[выпуклый многоугольник];;*);
	sc_node_not_relation->strictly_isosceles_triangle(*=>nrel_main_ru_idtf:[строго равнобедренный треугольник];;*);
	sc_node_not_relation->equilateral_triangle(*=>nrel_main_ru_idtf:[строго равнобедренный треугольник];;*)
}(*<=set_comment:[Разбиение по признаку конгруэнтности сторон](*<-lang_ru;;*);;*);;

triangle<=set_nrel_subdividing:
{
	sc_node_not_relation->oxygon(*=>nrel_main_ru_idtf:[остроугольный треугольник];;*);
	sc_node_not_relation->right_triangle(*=>nrel_main_ru_idtf:[прямоугольный треугольник];;*);
	sc_node_not_relation->obtuse_triangle(*=>nrel_main_ru_idtf:[тупоугольный треугольник;;*)
}(*<=set_comment:[Разбиение по признаку величины углов](*<-lang_ru;;*);;*);;


/*тут я создал для SCnFieldSpecRelDomainSet отношение: set_domain_set.scs и 
set_domain_super_set для SCnFieldSpecRelDomainSuperSet*/
/*и вот эти штуки nrel_congruence, nrel_similarity нам их нужно тоже создавать и описывать?*/

triangle<=set_domain_set:
{
	sc_node_norole_relation->nrel_congruence(*=>nrel_main_ru_idtf:[конгруэнтность*];;*);
	sc_node_norole_relation->nrel_similarity(*=>nrel_main_ru_idtf:[подобие*];;*)
};;


triangle<=set_domain_super_set:
{
	sc_node_norole_relation->median(*=>nrel_main_ru_idtf:[медиана*];;*);
	sc_node_norole_relation->height(*=>nrel_main_ru_idtf:[высота*];;*);
	sc_node_norole_relation->bisector(*=>nrel_main_ru_idtf:[биссектриса*];;*);
	sc_node_norole_relation->boundary(*=>nrel_main_ru_idtf:[граница*];;*);
	sc_node_norole_relation->area(*=>nrel_main_ru_idtf:[площадь*];;*);
	sc_node_norole_relation->perimeter(*=>nrel_main_ru_idtf:[периметр*];;*);
	sc_node_norole_relation->side(*=>nrel_main_ru_idtf:[сторона*];;*);
	sc_node_norole_relation->inner_corner(*=>nrel_main_ru_idtf:[внутренний угол*];;*)
};;


/* создал для SCnFieldSpecRelDomainIntersSet такую вот штуку set_domain_inters_set*/


triangle<=set_domain_inters_set:
{
	set_nrel_inclusion;
	set_nrel_intersection;
	set_nrel_union;
	set_subtraction;
	set_nrel_subdividing
};;

set_definition_relation->triangle_defenition_relation;;
triangle_defenition_relation=>main_ru_idtf:[Опр.(треугольник)];;
triangle_defenition_relation=>nrel_definition:[Треугольник - это геометрическая фигура, 
которая является результатом объединения понятия линейного треугольника и множества всех точек плоскости, 
которые лежат между двух любых точек, принадлежащих этому линейному треугольнику.];;
triangle_defenition_relation=>nrel_used_constants:
{
	sc_node_not_relation->linear_triangle(*=>nrel_main_ru_idtf:[линейный треугольник];;*);
	sc_node_not_relation->plane(*=>nrel_main_ru_idtf:[плоскость];;*);
	sc_node_not_relation->geometric_point(*=>nrel_main_ru_idtf:[геометрическая точка];;*);
	sc_node_not_relation->_between(*=>nrel_main_ru_idtf:[между_];;*)
};;

/*тут чо-то про геометрию евклида 4го уровня? Это вообще нужно?*/

nrel_single_assignment_statement->triangle_single_statement;;
triangle_single_statement=>main_ru_idtf:[Утв.(треугольник; непрямолинейная тройка точек; вершина*)];;
triangle_single_statement=>














